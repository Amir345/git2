Version Control System (VCS) is a software that helps software developers to work together and maintain a complete history of their work.

Listed below are the functions of a VCS:

Allows developers to work simultaneously.
Does not allow overwriting each other’s changes.
Maintains a history of every version.

git is a distributed version control system

Centralized version control system (CVCS) uses a central server to store all files and enables team collaboration. But the major drawback of CVCS is its single point of failure

DVCS clients not only check out the latest snapshot of the directory but they also fully mirror the repository. If the server goes down, then the repository from any client can be copied back to the server to restore it. Every checkout is a full backup of the repository. Git does not rely on the central server and that is why you can perform many operations when you are offline. You can commit changes, create branches, view logs, and perform other operations when you are offline. You require network connection only to publish your changes and take the latest changes.


---------------------------------------------------------------------------------
Advantages of Git

Free and open source

Fast and small

Implicit backup

Security

No need of powerful hardware at the central server

Easier branching as compared tp CVCS


----------------------------------------------------------------------------------

clone :- creates a clone of the repo and also checkout that repo, you can di whatever you feel like with this repo

pull :- sync changes with the remote repo to the local one

push :- push the changes from local to remote

HEAD :- HEAD is a pointer, which always points to the latest commit in the branch. Whenever you make a commit, HEAD is updated with the latest commit. The heads of the branches are stored in .git/refs/heads/ directory.

Revision :- Revision represents the version of the source code. Revisions in Git are represented by commits.

---------------------------------------------------------------------------------

Customize Git Environment

Git stores all global configurations in .gitconfig file, which is located in your home directory.

To set these configuration values as global, add the --global option, and if you omit --global option, then your configurations are specific for the current Git repository.

You can also set up system wide configuration. Git stores these values in the /etc/gitconfig file, which contains the configuration for every user and repository on the system. To set these values, you must have the root rights and use the --system option.

----------------------------------------------------------------------------------

Setting username :- git config --global user.name "Jerry Mouse"
Setting email id :- git config --global user.email "jerry@tutorialspoint.com"

Avoid merge commits for pulling

You pull the latest changes from a remote repository, and if these changes are divergent, then by default Git creates merge commits. We can avoid this via following settings.

git config --global branch.autosetuprebase always

Setting default merge tool

Git does not provide a default merge tool for integrating conflicting changes into your working tree

git config --global merge.tool vimdiff

to list git settings

git config -- list

----------------------------------------------------------------------------------

NOTE :- By default, Git pushes only to matching branches: For every branch that exists on the local side, the remote side is updated if a branch with the same name already exists there.

----------------------------------------------------------------------------------

Git init command creates .git directory to store metadata about the repository every time it reads the configuration from the .git/config file.

Syntax to push to a certain branch git push <remote> <branch>


git log command displays the history.

?? :- Unstaged on untracked file
A before the file means file is in the staging area

-----------------------------------------------------------------------------------

----------------------------------------------------------------------------------